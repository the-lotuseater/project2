version: '3'
services: 
    postgres:
        image: "postgres:latest"
        environment:
            - POSTGRES_PASSWORD=postgres_password

    redis:
        image: "redis:latest"
    api:
        build:
            context: ./server
            dockerfile: Dockerfile.dev 
        volumes:
            - /app/node_modules #bookmark node_modules folder so that we don't change anything inside it.
            - ./server:/app #map the app folder to the server folder in the root directory of the app.
        environment: #2 ways to define env variables. 1. the way below, these are used are runtime and are specific to the machine. 2. Use the variable the way it its used but it pulls in the variable value from the system.
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - PG_USER=postgres #need to read the documentation to get the default values for the image.
            - PG_HOST=postgres
            - PG_DATABASE=postgres
            - PG_PASSWORD=postgres_password
            - PG_HOST=5432
    client:
        build:
            context: ./client
            dockerfile: Dockerfile.dev
        volumes:
            - /app/node_modules
            - ./client:/app
    worker:
        build: 
            context: ./worker
            dockerfile: Dockerfile.dev
        volumes: 
            - /app/node_modules
            - ./client:app
    router:
        build:
            context: ./nginx
            dockerfile: Dockerfile.dev
        restart: always #because the router is a critical piece in how the entire application is up and running we need to make sure its always up.
        ports: 
            - '3050:80'